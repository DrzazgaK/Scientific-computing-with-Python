#Let p=(x,y) be a point in a plane. Define the following functions using lambda:
#(a) a test if p is in unit circle,

p=(x,y)
x=0.5, y=0.5
if ((x*x + y*y) <= 1):
    print ("p is in unit circle")
else:
    print ("p is not in unit circle")
    
# inne dane:

def czy_p_nalezy():
    p=input("wprowadz p:(x,y) ")
    if ((x*x + y*y) <= 1):
        print ("p jest w okregu")
    else:
        print ("p nie jest w okregu")

czy_p_nalezy()
wprowadz p:(x,y) p:(0,0) #p jest w okregu
#else nie działa...

#z funkcją lambda

p_in_unit_circle = lambda p: True if (p[0]**2 + p[1]**2) <= 1 else False
p=(3,3)
print( p_in_unit_circle(p))
#####################################################################

#(b) a test if the coordinates of p are positive,
positive_coordinates = lambda p: True if p[0] > 0 and p[1] > 0 else False
p=(1,-3)
print('Are p coordinates positive?', positive_coordinates(p))

#(c) a sorting key (y decreasing, x increasing),

points = [(2, 4), (-1, 4), (0, -3), (1, 2), (-4,-1)]
sorting_key = lambda p: (-p[1], p[0])
sorted_points = sorted(points, key=sorting_key)
print(sorted_points)

#(d) a sorting key (the sum |x|+|y|).
sorting_key_sum = lambda p: abs(p[0]) + abs(p[1])
sorted_points = sorted(points, key=sorting_key_sum)
print(sorted_points) 
