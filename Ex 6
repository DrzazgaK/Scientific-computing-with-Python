import math
from math import sqrt

class Vector:
    def __init__(self, x, y, z):
        self.data = [0, 0, 0]
        self.data[0] = x
        self.data[1] = y
        self.data[2] = z
        self.x = x
        self.y = y
        self.z = z
    def __repr__(self):
        return 'Vector ({}, {}, {})'.format(self.x, self.y, self.z)
    def is_zero(self):
        return all(item == 0 for item in self.data)
    def __eq__(self, other):
        return (self - other).is_zero()
    def __ne__(self, other):
        return not self == other
    def __add__(self, other):
        return Vector(self.x + other.x, self.y + other.y, self.z + other.z)
    def __sub__(self, other):
        return Vector(self.x - other.x, self.y - other.y, self.z - other.z)
    def __mul__(self, other):
        return self.x * other.x + self.y * other.y + self.z * other.z
    def cross(self, other):
        return Vector(self.y * other.z - self.z * other.y, self.z * other.x - self.x * other.z, self.x * other.y - self.y * other.x)
    def length(self):
        return sqrt(self.x**2 + self.y**2 + self.z**2)
    def __hash__(self):
        return hash((self.x, self.y, self.z))

#test
v = Vector(5,10,15)
w = Vector(12,3,14)
assert v != w
assert v + w == Vector(17, 13, 29)
assert v - w == Vector(-13,7,1)
assert v * w == 300
assert v.cross(w) == Vector(95,110,-105)
assert v.length() == math.sqrt(350)
S = set([v, v, w])
assert len(S) == 2
